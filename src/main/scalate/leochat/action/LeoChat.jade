- import leochat.action._

#chatOutput
input(type="text" id="chatInput" name="chatInput" class="required" disabled="disabled")

input(type="radio" name="image_select" value="0" checked)
img(id="png_0" src={publicUrl("images/leofs.png")})
br
input(type="radio" name="image_select" value="1")
img(id="png_1" src={publicUrl("images/xitrum.png")})
br
input(type="radio" name="image_select" value="2")
input(type="file" id="chatFile" name="chatFile" class="required" disabled="disabled")


br
button(id="fileSend") stamp
-
 jsAddToView(
    "var url = '" + webSocketAbsUrl[LeoChatActor] + "';" +
    "var ajaxUrl = '" + url[LeoChatRest] + "';" +
    """
    var socket;

    // Do not put in initSocket so that this event handler is registered only once
    $('#chatInput').keypress(function(event) {
      var keycode = (event.keyCode ? event.keyCode : event.which);
      if (keycode == '13') {
        socket.send($('#chatInput').val());
        $('#chatInput').val('');
      }
    });
    var color = "red";
    if (location.port !== "8000") color = "blue";
    $("#chatOutput").before("<h4>This instance is running on <span style='color:" +color + ";'>" + location.host + "</span></h4>");

    function sendImage(){
      var data = "",
      getBase64FromImageUrl = function(URL) {
        var img = new Image();
        img.src = URL;
        img.onload = function () {
          var canvas = document.createElement("canvas");
          canvas.width =this.width;
          canvas.height =this.height;
          var ctx = canvas.getContext("2d");
          ctx.drawImage(this, 0, 0);
          socket.send(canvas.toDataURL("image/png"));
        }
      },
      fileRead = function(fileData){
        var reader = new FileReader();
        reader.onerror = function (evt) {
          showAlert("Cannot read file, some eroor occuerd.");
          return;
        }
        reader.onload = function(evt){
          socket.send(evt.target.result);
        }
        reader.readAsDataURL(fileData);
      },
      imgNum = $('input[name="image_select"]:checked').val()
      ;

      if(imgNum === "2"){
        var fileData = document.getElementById("chatFile").files[0];
        if (!fileData){
          alert("File was not found.");
          return;
        }
        if (fileData.type && !fileData.type.match('image/*')) {
          alert("Cannot read file. Please set plain image file.");
          return;
        }
        fileRead(fileData);
      }else{
        getBase64FromImageUrl($("#png_"+imgNum).attr('src'));
      }
    }
    $("#fileSend").on('click',sendImage);

    // read older messages via ajax request
    var readMore = function(){
       var lastMsg = $("#chatOutput").children('span')[0];
       if (!lastMsg || !lastMsg.id) return false;
       $("#readMore").attr("disabled","disabled")
       $.get(ajaxUrl,{lastKey:lastMsg.id })
       .done(function(data){
         $("#connected").after("<span> - - - - - - - </span><br>");
         $.each(data,function(idx,msg){
            $("#connected").after(getContent(msg));
         });
         $("#chatOutput").scrollTop(0);
         $("#readMore").removeAttr("disabled");
       })
       .fail(function(e){
         console.log("error");
         $("#readMore").removeAttr("disabled");
       });
    };

    var getContent = function(msg){
      var key  = msg.key,
          date = msg.date,
          name = msg.name,
          body = msg.body
          ;

      var content = '<span id=' + key +'>' +xitrum.escapeHtml(date + " by " + name + " ");
      if(body.match(/^data:/)){
        content = content + "<img src='" + body +"'></span><br />"
      }else{
        content = content +  '- ' + xitrum.escapeHtml(body) + '</span><br />';
      }
      return content;
    };

    var initSocket = function() {
      if (!window.WebSocket) window.WebSocket = window.MozWebSocket;
      if (!window.WebSocket) {
        alert("Your browser does not support WebSocket.");
      } else {
        socket = new WebSocket(url);

        socket.onopen = function(event) {
          var text = '<div id="connected"><b>[Connected]</b>&nbsp;<button id="readMore">Read Older</button><br /></div>';
          xitrum.appendAndScroll('#chatOutput', text);
          $('#chatInput').removeAttr('disabled');
          $('#chatFile').removeAttr('disabled');
          $("#readMore").on('click',readMore);
        };

        socket.onclose = function(event) {
          var text = '<b>[Disconnected]</b><br />';
          xitrum.appendAndScroll('#chatOutput', text);
          $('#chatInput').attr('disabled', 'disabled');
          $('#chatFile') .attr('disabled', 'disabled');
          $('#readMore') .attr('disabled', 'disabled');

          // Reconnect
          setTimeout(initSocket, 5000);
        };

        socket.onmessage = function(event) {
          var json = JSON.parse(event.data);
          xitrum.appendAndScroll('#chatOutput', getContent(json));
        };
      }
    };
    initSocket();
    """
  )
